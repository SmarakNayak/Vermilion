# This is a workflow that installs dependencies
name: 0. Install Dependencies

# Controls when the workflow will run
on:
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:
    inputs:
      hetzner_server:
        description: 'Which server to deploy to? Hetzner_blue or Hetzner_green'
        required: true
        default: 'Hetzner_'

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  Install-Dependencies:
    runs-on: ubuntu-latest
    environment: '${{ github.event.inputs.hetzner_server }}'
    steps:
      - name: Configure SSH
        run: |
          mkdir -p ~/.ssh/
          echo "$SSH_KEY" > ~/.ssh/staging.key
          chmod 600 ~/.ssh/staging.key
          cat >>~/.ssh/config <<END
          Host staging
            HostName $SSH_HOST
            User $SSH_USER
            IdentityFile ~/.ssh/staging.key
            StrictHostKeyChecking no
          END
        env:
          SSH_USER: ${{ vars.SERVER_USER }}
          SSH_KEY: ${{ secrets.SERVER_SSH_KEY }}
          SSH_HOST: ${{ vars.SERVER_HOST }}
      
      - name: Update apt
        run: ssh staging 'sudo apt-get -y update'
        
      - name: Install nginx
        run: ssh staging 'sudo apt-get -y install nginx'

      # to upgrade on ubuntu:
      # apt-get install postgresql-17
      # pg_upgradecluster 16 main -v 17 -m upgrade -k
      # pg_dropcluster 16 main
      - name: Install postgres
        run: |
          ssh staging 'sudo apt install -y postgresql-common'
          ssh staging 'sudo /usr/share/postgresql-common/pgdg/apt.postgresql.org.sh -y'
          ssh staging 'sudo apt-get -y install postgresql'

      - name: Install aws
        run: ssh staging 'sudo apt-get -y install unzip; curl "https://awscli.amazonaws.com/awscli-exe-linux-x86_64.zip" -o "awscliv2.zip"; unzip -o awscliv2.zip; sudo ./aws/install --update;'
      
      - name: Install rclone
        run: ssh staging 'sudo apt-get -y install rclone;'

      - name: Install essential build tools for rust
        run: ssh staging 'sudo apt-get -y install build-essential pkg-config libssl-dev'

      - name: Install puppeteer dependencies
        run: |
          ssh staging 'sudo apt-get -y install \
            ca-certificates \
            fonts-liberation \
            libasound2t64 \
            libatk-bridge2.0-0 \
            libatk1.0-0 \
            libc6 \
            libcairo2 \
            libcups2 \
            libdbus-1-3 \
            libexpat1 \
            libfontconfig1 \
            libgbm1 \
            libgcc1 \
            libglib2.0-0 \
            libgtk-3-0 \
            libnspr4 \
            libnss3 \
            libpango-1.0-0 \
            libpangocairo-1.0-0 \
            libstdc++6 \
            libx11-6 \
            libx11-xcb1 \
            libxcb1 \
            libxcomposite1 \
            libxcursor1 \
            libxdamage1 \
            libxext6 \
            libxfixes3 \
            libxi6 \
            libxrandr2 \
            libxrender1 \
            libxss1 \
            libxtst6 \
            lsb-release \
            wget \
            xdg-utils'
