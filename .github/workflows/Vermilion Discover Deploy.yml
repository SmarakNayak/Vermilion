# This is a workflow that deploys a fresh vermilion instance
name: Vermilion Discover Deploy

# Controls when the workflow will run
on:
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  Vermilion-Discover-Deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Configure SSH
        run: |
          mkdir -p ~/.ssh/
          echo "$SSH_KEY" > ~/.ssh/staging.key
          chmod 600 ~/.ssh/staging.key
          cat >>~/.ssh/config <<END
          Host staging
            HostName $SSH_HOST
            User $SSH_USER
            IdentityFile ~/.ssh/staging.key
            StrictHostKeyChecking no
          END
        env:
          SSH_USER: ${{ vars.SERVER_USER }}
          SSH_KEY: ${{ secrets.SERVER_SSH_KEY }}
          SSH_HOST: ${{ vars.SERVER_HOST }}

      - name: Stop the server if running
        run: |
          ssh staging 'sudo systemctl is-active discover.service && sudo systemctl stop discover.service || echo "discover not running";'    
      
      - name: Check out the new code from Github
        run: ssh staging 'git -C Vermilion-Discover fetch && git -C Vermilion-Discover reset --hard origin/main || git clone git@github-discover:SmarakNayak/Vermilion-Discover.git' # This pulls if directory exists, otherwise clones
        
      - name: Get python dependencies
        run: |
          ssh staging 'sudo apt-get install -y python3-venv'
          ssh staging 'cd Vermilion-Discover; python3 -m venv venv;'
          ssh staging 'cd Vermilion-Discover; source venv/bin/activate; python3 -m pip install -r requirements.txt'
          
      - name: Set up systemd services
        run: ssh staging 'sudo cp Vermilion/systemd/discover.service /etc/systemd/system/discover.service; sudo systemctl daemon-reload;' 

      - name: Setup cluster cronjob
        run: ssh staging 'crontab /home/ubuntu/Vermilion/Cronjobs/Vermilion.cron'
      
      - name: Start the app
        if: ${{ always() }}
        run: ssh staging 'sudo systemctl start discover.service;'
